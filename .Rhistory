series_new = series
#print("i loop")
for (j in 0:4) { #runs 5 times for every i loop iteration to introduce a gap of 5 starting from a seed point
series_new$glucoseValue[i+j] = NA
#print("j loop")
}
#series_new now has a gap of 5 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
#calculating mean absolute difference
temp1 = mad(series_new$glucoseValue)
mad_spline_5 = c(mad_spline_5,temp1)
#calculating fractional bias
temp2 = compute.fb(series_new$glucoseValue,series$glucoseValue)
fractional_bias_spline_5 = c(fractional_bias_spline_5, temp2)
#calculating RMSE
temp3 = compute.rmse(series_new$glucoseValue,series$glucoseValue)
rmse_spline_5 = c(rmse_spline_5,temp3)
#calculatind IOA
x = data.frame("real" = series$glucoseValue, 'imputed' = series_new$glucoseValue)
temp4 = modStats(x,mod = "imputed",obs = "real", statistic = c("IOA"))
ioa_spline_5 = c(ioa_spline_5, temp4$IOA)
}
mean_fractional_bias_spline_5 = mean(fractional_bias_spline_5)
cat("Mean Fractional Bias for na.spline method with Gap Value of 5 is ",mean_fractional_bias_spline_5, "thats is, ",mean_fractional_bias_spline_5*100,"%\n\n")
mean_rmse_spline_5 = mean(rmse_spline_5)
cat("Mean RMSE for na.spline method with Gap Value of 5 is ",mean_rmse_spline_5, "thats is, ",mean_rmse_spline_5*100,"%\n\n")
mean_ioa_spline_5 = mean(ioa_spline_5)
cat("Mean IOA for na.spline method with Gap Value of 5 is ",mean_ioa_spline_5, "thats is, ",mean_ioa_spline_5*100,"%\n\n")
mean_mad_spline_5 = mean(mad_spline_5)
cat("Mean MAD for na.approx method with Gap Value of 5 is ",mean_mad_spline_5,"\n\n")
mad_spline = c(mad_spline,mean_mad_spline_5)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_5)
rmse_spline = c(rmse_spline,mean_rmse_spline_5)
ioa_spline = c(ioa_spline, mean_ioa_spline_5)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
rm(mad_spline_5)
rm(mean_mad_spline_5)
rm(fractional_bias_spline_5)
rm(mean_fractional_bias_spline_5)
rm(rmse_spline_5)
rm(mean_rmse_spline_5)
rm(ioa_spline_5)
rm(mean_ioa_spline_5)
mad_spline_10 = c()
fractional_bias_spline_10 = c()
rmse_spline_10 = c()
ioa_spline_10 = c()
for (i in seed_points) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
#print("i loop")
for (j in 0:9) { #runs 10 times for every i loop iteration to introduce a gap of 10 starting from a seed point
series_new$glucoseValue[i+j] = NA
#print("j loop")
}
#series_new now has a gap of 10 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
#calculating mean absolute difference
temp1 = mad(series_new$glucoseValue)
mad_spline_10 = c(mad_spline_10,temp1)
#calculating fractional bias
temp2 = compute.fb(series_new$glucoseValue,series$glucoseValue)
fractional_bias_spline_10 = c(fractional_bias_spline_10, temp2)
#calculating RMSE
temp3 = compute.rmse(series_new$glucoseValue,series$glucoseValue)
rmse_spline_10 = c(rmse_spline_10,temp3)
#calculatind IOA
x = data.frame("real" = series$glucoseValue, 'imputed' = series_new$glucoseValue)
temp4 = modStats(x,mod = "imputed", obs = "real", statistic = c("IOA"))
ioa_spline_10 = c(ioa_spline_10, temp4$IOA)
}
mean_fractional_bias_spline_10 = mean(fractional_bias_spline_10)
cat("Mean Fractional Bias for na.spline method with Gap Value of 10 is ",mean_fractional_bias_spline_10, "thats is, ",mean_fractional_bias_spline_10*100,"%\n\n")
mean_rmse_spline_10 = mean(rmse_spline_10)
cat("Mean RMSE for na.spline method with Gap Value of 10 is ",mean_rmse_spline_10, "thats is, ",mean_rmse_spline_10*100,"%\n\n")
mean_ioa_spline_10 = mean(ioa_spline_10)
cat("Mean IOA for na.spline method with Gap Value of 10 is ",mean_ioa_spline_10, "thats is, ",mean_ioa_spline_10*100,"%\n\n")
mean_mad_spline_10 = mean(mad_spline_10)
cat("Mean MAD for na.approx method with Gap Value of 10 is ",mean_mad_spline_10,"\n\n")
mad_spline = c(mad_spline,mean_mad_spline_10)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_10)
rmse_spline = c(rmse_spline,mean_rmse_spline_10)
ioa_spline = c(ioa_spline, mean_ioa_spline_10)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
rm(mad_spline_10)
rm(mean_mad_spline_10)
rm(fractional_bias_spline_10)
rm(mean_fractional_bias_spline_10)
rm(rmse_spline_10)
rm(mean_rmse_spline_10)
rm(ioa_spline_10)
rm(mean_ioa_spline_10)
mad_spline_20 = c()
fractional_bias_spline_20 = c()
rmse_spline_20 = c()
ioa_spline_20 = c()
for (i in seed_points) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
#print("i loop")
for (j in 0:19) { #runs 20 times for every i loop iteration to introduce a gap of 20 starting from a seed point
series_new$glucoseValue[i+j] = NA
#print("j loop")
}
#series_new now has a gap of 20 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
#calculating mean absolute difference
temp1 = mad(series_new$glucoseValue)
mad_spline_20 = c(mad_spline_20,temp1)
#calculating fractional bias
temp2 = compute.fb(series_new$glucoseValue,series$glucoseValue)
fractional_bias_spline_20 = c(fractional_bias_spline_20, temp2)
#calculating RMSE
temp3 = compute.rmse(series_new$glucoseValue,series$glucoseValue)
rmse_spline_20 = c(rmse_spline_20,temp3)
#calculatind IOA
x = data.frame("real" = series$glucoseValue, 'imputed' = series_new$glucoseValue)
temp4 = modStats(x,mod = "imputed",obs = "real", statistic = c("IOA"))
ioa_spline_20 = c(ioa_spline_20, temp4$IOA)
}
mean_fractional_bias_spline_20 = mean(fractional_bias_spline_20)
cat("Mean Fractional Bias for na.spline method with Gap Value of 20 is ",mean_fractional_bias_spline_20, "thats is, ",mean_fractional_bias_spline_20*100,"%\n\n")
mean_rmse_spline_20 = mean(rmse_spline_20)
cat("Mean RMSE for na.spline method with Gap Value of 20 is ",mean_rmse_spline_20, "thats is, ",mean_rmse_spline_20*100,"%\n\n")
mean_ioa_spline_20 = mean(ioa_spline_20)
cat("Mean IOA for na.spline method with Gap Value of 20 is ",mean_ioa_spline_20, "thats is, ",mean_ioa_spline_20*100,"%\n\n")
mean_mad_spline_20 = mean(mad_spline_20)
cat("Mean MAD for na.approx method with Gap Value of 20 is ",mean_mad_spline_20,"\n\n")
mad_spline = c(mad_spline,mean_mad_spline_20)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_20)
rmse_spline = c(rmse_spline,mean_rmse_spline_20)
ioa_spline = c(ioa_spline, mean_ioa_spline_20)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
rm(mad_spline_20)
rm(mean_mad_spline_20)
rm(fractional_bias_spline_20)
rm(mean_fractional_bias_spline_20)
rm(rmse_spline_20)
rm(mean_rmse_spline_20)
rm(ioa_spline_20)
rm(mean_ioa_spline_20)
mad_spline_25 = c()
fractional_bias_spline_25 = c()
rmse_spline_25 = c()
ioa_spline_25 = c()
for (i in seed_points) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
#print("i loop")
for (j in 0:24) { #runs 25 times for every i loop iteration to introduce a gap of 25 starting from a seed point
series_new$glucoseValue[i+j] = NA
#print("j loop")
}
#series_new now has a gap of 20 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
#calculating mean absolute difference
temp1 = mad(series_new$glucoseValue)
mad_spline_25 = c(mad_spline_25,temp1)
#calculating fractional bias
temp2 = compute.fb(series_new$glucoseValue,series$glucoseValue)
fractional_bias_spline_25 = c(fractional_bias_spline_25, temp2)
#calculating RMSE
temp3 = compute.rmse(series_new$glucoseValue,series$glucoseValue)
rmse_spline_25 = c(rmse_spline_25,temp3)
#calculatind IOA
x = data.frame("real" = series$glucoseValue, 'imputed' = series_new$glucoseValue)
temp4 = modStats(x,mod = "imputed",obs = "real", statistic = c("IOA"))
ioa_spline_25 = c(ioa_spline_25, temp4$IOA)
}
mean_fractional_bias_spline_25 = mean(fractional_bias_spline_25)
cat("Mean Fractional Bias for na.spline method with Gap Value of 25 is ",mean_fractional_bias_spline_25, "thats is, ",mean_fractional_bias_spline_25*100,"%\n\n")
mean_rmse_spline_25 = mean(rmse_spline_25)
cat("Mean RMSE for na.spline method with Gap Value of 25 is ",mean_rmse_spline_25, "thats is, ",mean_rmse_spline_25*100,"%\n\n")
mean_ioa_spline_25 = mean(ioa_spline_25)
cat("Mean IOA for na.spline method with Gap Value of 25 is ",mean_ioa_spline_25, "thats is, ",mean_ioa_spline_25*100,"%\n\n")
mean_mad_spline_25 = mean(mad_spline_25)
cat("Mean MAD for na.approx method with Gap Value of 25 is ",mean_mad_spline_25,"\n\n")
mad_spline = c(mad_spline,mean_mad_spline_25)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_25)
rmse_spline = c(rmse_spline,mean_rmse_spline_25)
ioa_spline = c(ioa_spline, mean_ioa_spline_25)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
rm(mad_spline_25)
rm(mean_mad_spline_25)
rm(fractional_bias_spline_25)
rm(mean_fractional_bias_spline_25)
rm(rmse_spline_25)
rm(mean_rmse_spline_25)
rm(ioa_spline_25)
rm(mean_ioa_spline_25)
mad_spline_50 = c()
fractional_bias_spline_50 = c()
rmse_spline_50 = c()
ioa_spline_50 = c()
for (i in seed_points) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
#print("i loop")
for (j in 0:49) { #runs 50 times for every i loop iteration to introduce a gap of 50 starting from a seed point
series_new$glucoseValue[i+j] = NA
#print("j loop")
}
#series_new now has a gap of 50 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
#calculating mean absolute difference
temp1 = mad(series_new$glucoseValue)
mad_spline_50 = c(mad_spline_50,temp1)
#calculating fractional bias
temp2 = compute.fb(series_new$glucoseValue,series$glucoseValue)
fractional_bias_spline_50 = c(fractional_bias_spline_50, temp2)
#calculating RMSE
temp3 = compute.rmse(series_new$glucoseValue,series$glucoseValue)
rmse_spline_50 = c(rmse_spline_50,temp3)
#calculatind IOA
x = data.frame("real" = series$glucoseValue, 'imputed' = series_new$glucoseValue)
temp4 = modStats(x,mod = "imputed",obs = "real", statistic = c("IOA"))
ioa_spline_50 = c(ioa_spline_50, temp4$IOA)
}
mean_fractional_bias_spline_50 = mean(fractional_bias_spline_50)
cat("Mean Fractional Bias for na.spline method with Gap Value of 50 is ",mean_fractional_bias_spline_50, "thats is, ",mean_fractional_bias_spline_50*100,"%\n\n")
mean_rmse_spline_50 = mean(rmse_spline_50)
cat("Mean RMSE for na.spline method with Gap Value of 50 is ",mean_rmse_spline_50, "thats is, ",mean_rmse_spline_50*100,"%\n\n")
mean_ioa_spline_50 = mean(ioa_spline_50)
cat("Mean IOA for na.spline method with Gap Value of 50 is ",mean_ioa_spline_50, "thats is, ",mean_ioa_spline_50*100,"%\n\n")
mean_mad_spline_50 = mean(mad_spline_50)
cat("Mean MAD for na.approx method with Gap Value of 50 is ",mean_mad_spline_50,"\n\n")
mad_spline = c(mad_spline,mean_mad_spline_50)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_50)
rmse_spline = c(rmse_spline,mean_rmse_spline_50)
ioa_spline = c(ioa_spline, mean_ioa_spline_50)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
rm(mad_spline_50)
rm(mean_mad_spline_50)
rm(fractional_bias_spline_50)
rm(mean_fractional_bias_spline_50)
rm(rmse_spline_50)
rm(mean_rmse_spline_50)
rm(ioa_spline_50)
rm(mean_ioa_spline_50)
mad_spline
frac_bias_spline
rmse_spline
ioa_spline
plot(frac_bias_approx, type='l')
plot(frac_bias_approx, type='l', col = 'green')
x = c(5,10,20,25,50)
plot(x)
x = c(5,10,20,25,50)
plot(x=x,y=NULL)
plot(NULL,NULL)
plot(NULL,NULL, xlim = c(5,50), ylim = c(0,0.2))
plot(NULL,NULL, xlim = c(0,50), ylim = c(0,0.2),xlab = 'Gap Size', ylab = 'Fractional Bias')
plot(NULL,NULL, xlim = c(0,50), ylim = c(0,0.2),xlab = 'Gap Size', ylab = 'Fractional Bias')
line(frac_bias_approx)
plot(NULL,NULL, xlim = c(0,50), ylim = c(0,0.2),xlab = 'Gap Size', ylab = 'Fractional Bias')
lines(frac_bias_approx)
plot(NULL,NULL, xlim = c(0,50), ylim = c(0,0.02),xlab = 'Gap Size', ylab = 'Fractional Bias')
lines(frac_bias_approx)
plot(NULL,NULL, xlim = c(0,50), ylim = c(0,0.0002),xlab = 'Gap Size', ylab = 'Fractional Bias')
lines(frac_bias_approx)
plot(NULL,NULL, xlim = c(0,50), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias')
lines(frac_bias_approx)
plot(NULL,NULL, xlim = c(0,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias')
lines(frac_bias_approx)
plot(NULL,NULL, xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias')
lines(frac_bias_approx)
plot(NULL,NULL, xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
lines(frac_bias_approx)
plot(NULL,NULL, xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
plot(NULL,NULL, xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
#lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
plot(NULL,NULL, xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
lines(frac_bias_approx, col = 'red')
#lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
plot(NULL,NULL, xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
plot(NULL,NULL, xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,labels = c('5','10','20','25','50'))
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,labels = c('5','10','20','25','50'))
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,labels = l)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:5),labels = l)
lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:5),labels = l)
legend("topright",c('na.approx, na.interp, na.spline'),col = c('red','blue','green'),)
lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:5),labels = l)
legend("topright", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),)
lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias',lwd=4)
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(frac_bias_approx, col = 'red')
lines(frac_bias_interp, col = 'blue')
lines(frac_bias_spline, col = 'green')
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(frac_bias_approx, col = 'red',lwd=4)
lines(frac_bias_interp, col = 'blue',lwd=4)
lines(frac_bias_spline, col = 'green',lwd=4)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(frac_bias_approx, col = 'red',lwd=4)
lines(frac_bias_interp, col = 'blue',lwd=2)
lines(frac_bias_spline, col = 'green',lwd=4)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.002),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(frac_bias_approx, col = 'red',lwd=4)
lines(frac_bias_interp, col = 'blue',lwd=2)
lines(frac_bias_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.7,2.8),xlab = 'Gap Size', ylab = 'Mean Absolute Error', main = 'Comparing Mean Absolute Error')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.77,3.0),xlab = 'Gap Size', ylab = 'Mean Absolute Error', main = 'Comparing Mean Absolute Error')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.77,2.8),xlab = 'Gap Size', ylab = 'Mean Absolute Error', main = 'Comparing Mean Absolute Error')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.78,2.8),xlab = 'Gap Size', ylab = 'Mean Absolute Error', main = 'Comparing Mean Absolute Error')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.77,2.80),xlab = 'Gap Size', ylab = 'Mean Absolute Error', main = 'Comparing Mean Absolute Error')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.775,2.80),xlab = 'Gap Size', ylab = 'Mean Absolute Error', main = 'Comparing Mean Absolute Error')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.775,2.80),xlab = 'Gap Size', ylab = 'Mean Absolute Error', main = 'Comparing Mean Absolute Error')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.775,2.80),xlab = 'Gap Size', ylab = 'RMSE', main = 'Comparing RMSE')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(rmse_approx, col = 'red',lwd=4)
lines(rmse_interp, col = 'blue',lwd=2)
lines(rmse_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.01),xlab = 'Gap Size', ylab = 'RMSE', main = 'Comparing RMSE')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(rmse_approx, col = 'red',lwd=4)
lines(rmse_interp, col = 'blue',lwd=2)
lines(rmse_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.1),xlab = 'Gap Size', ylab = 'RMSE', main = 'Comparing RMSE')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(rmse_approx, col = 'red',lwd=4)
lines(rmse_interp, col = 'blue',lwd=2)
lines(rmse_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.2),xlab = 'Gap Size', ylab = 'RMSE', main = 'Comparing RMSE')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(rmse_approx, col = 'red',lwd=4)
lines(rmse_interp, col = 'blue',lwd=2)
lines(rmse_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,0.15),xlab = 'Gap Size', ylab = 'RMSE', main = 'Comparing RMSE')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(rmse_approx, col = 'red',lwd=4)
lines(rmse_interp, col = 'blue',lwd=2)
lines(rmse_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(2.775,2.80),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0.9,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0.99,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0.999,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0.995,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0.995,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topright", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
l=c('5','10','20','25','50')
plot(NULL,NULL, xaxt='n', xlim = c(1,5), ylim = c(0.995,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Comparing Index of Agreement')
axis(1,at=seq(1:5),labels = l)
legend("topright", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=4)
lines(ioa_interp, col = 'blue',lwd=2)
lines(ioa_spline, col = 'green',lwd=2)
