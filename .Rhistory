rm(x)
rm(i)
rm(j)
mad_spline_10 = c()
fractional_bias_spline_10 = c()
rmse_spline_10 = c()
ioa_spline_10 = c()
for (i in 1:100) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
old_values = c()
new_values = c()
#print("i loop")
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:9) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
old_values = c(old_values,series_new$glucoseValue[seed+j])
series_new$glucoseValue[seed+j] = NA
#print("j loop")
}
}
#series_new now has a gap of 10 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:9) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
new_values = c(new_values,series_new$glucoseValue[seed+j])
#print("j loop")
}
}
#calculating mean absolute difference
temp1 = mad(new_values)
mad_spline_10 = c(mad_spline_10,temp1)
#calculating fractional bias
temp2 = compute.fb(new_values,old_values)
fractional_bias_spline_10 = c(fractional_bias_spline_10, temp2)
#calculating RMSE
temp3 = compute.rmse(new_values,old_values)
rmse_spline_10 = c(rmse_spline_10,temp3)
#calculatind IOA
x = data.frame("real" = old_values, 'imputed' = new_values)
temp4 = modStats(x,mod = "imputed", obs = "real", statistic = c("IOA"))
ioa_spline_10 = c(ioa_spline_10, temp4$IOA)
}
mean_fractional_bias_spline_10 = mean(fractional_bias_spline_10)
# cat("Mean Fractional Bias for na.spline method with Gap Value of 10 is ",mean_fractional_bias_spline_10, "thats is, ",mean_fractional_bias_spline_10*100,"%\n\n")
#
mean_rmse_spline_10 = mean(rmse_spline_10)
# cat("Mean RMSE for na.spline method with Gap Value of 10 is ",mean_rmse_spline_10, "thats is, ",mean_rmse_spline_10*100,"%\n\n")
#
mean_ioa_spline_10 = mean(ioa_spline_10)
# cat("Mean IOA for na.spline method with Gap Value of 10 is ",mean_ioa_spline_10, "thats is, ",mean_ioa_spline_10*100,"%\n\n")
#
mean_mad_spline_10 = mean(mad_spline_10)
# cat("Mean MAD for na.approx method with Gap Value of 10 is ",mean_mad_spline_10,"\n\n")
#
mad_spline = c(mad_spline,mean_mad_spline_10)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_10)
rmse_spline = c(rmse_spline,mean_rmse_spline_10)
ioa_spline = c(ioa_spline, mean_ioa_spline_10)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
mad_spline_20 = c()
fractional_bias_spline_20 = c()
rmse_spline_20 = c()
ioa_spline_20 = c()
for (i in 1:100) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
old_values = c()
new_values = c()
#print("i loop")
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:19) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
old_values = c(old_values,series_new$glucoseValue[seed+j])
series_new$glucoseValue[seed+j] = NA
#print("j loop")
}
}
#series_new now has a gap of 20 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:19) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
new_values = c(new_values,series_new$glucoseValue[seed+j])
#print("j loop")
}
}
#calculating mean absolute difference
temp1 = mad(new_values)
mad_spline_20 = c(mad_spline_20,temp1)
#calculating fractional bias
temp2 = compute.fb(new_values,old_values)
fractional_bias_spline_20 = c(fractional_bias_spline_20, temp2)
#calculating RMSE
temp3 = compute.rmse(new_values,old_values)
rmse_spline_20 = c(rmse_spline_20,temp3)
#calculatind IOA
x = data.frame("real" = old_values, 'imputed' = new_values)
temp4 = modStats(x,mod = "imputed",obs = "real", statistic = c("IOA"))
ioa_spline_20 = c(ioa_spline_20, temp4$IOA)
}
mean_fractional_bias_spline_20 = mean(fractional_bias_spline_20)
# cat("Mean Fractional Bias for na.spline method with Gap Value of 20 is ",mean_fractional_bias_spline_20, "thats is, ",mean_fractional_bias_spline_20*100,"%\n\n")
#
mean_rmse_spline_20 = mean(rmse_spline_20)
# cat("Mean RMSE for na.spline method with Gap Value of 20 is ",mean_rmse_spline_20, "thats is, ",mean_rmse_spline_20*100,"%\n\n")
#
mean_ioa_spline_20 = mean(ioa_spline_20)
# cat("Mean IOA for na.spline method with Gap Value of 20 is ",mean_ioa_spline_20, "thats is, ",mean_ioa_spline_20*100,"%\n\n")
#
mean_mad_spline_20 = mean(mad_spline_20)
# cat("Mean MAD for na.approx method with Gap Value of 20 is ",mean_mad_spline_20,"\n\n")
#
mad_spline = c(mad_spline,mean_mad_spline_20)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_20)
rmse_spline = c(rmse_spline,mean_rmse_spline_20)
ioa_spline = c(ioa_spline, mean_ioa_spline_20)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
mad_spline_25 = c()
fractional_bias_spline_25 = c()
rmse_spline_25 = c()
ioa_spline_25 = c()
for (i in 1:100) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
old_values = c()
new_values = c()
#print("i loop")
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:24) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
old_values = c(old_values,series_new$glucoseValue[seed+j])
series_new$glucoseValue[seed+j] = NA
#print("j loop")
}
}
#series_new now has a gap of 20 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:24) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
new_values = c(new_values,series_new$glucoseValue[seed+j])
#print("j loop")
}
}
#calculating mean absolute difference
temp1 = mad(new_values)
mad_spline_25 = c(mad_spline_25,temp1)
#calculating fractional bias
temp2 = compute.fb(new_values,old_values)
fractional_bias_spline_25 = c(fractional_bias_spline_25, temp2)
#calculating RMSE
temp3 = compute.rmse(new_values,old_values)
rmse_spline_25 = c(rmse_spline_25,temp3)
#calculatind IOA
x = data.frame("real" = old_values, 'imputed' = new_values)
temp4 = modStats(x,mod = "imputed",obs = "real", statistic = c("IOA"))
ioa_spline_25 = c(ioa_spline_25, temp4$IOA)
}
mean_fractional_bias_spline_25 = mean(fractional_bias_spline_25)
# cat("Mean Fractional Bias for na.spline method with Gap Value of 25 is ",mean_fractional_bias_spline_25, "thats is, ",mean_fractional_bias_spline_25*100,"%\n\n")
#
mean_rmse_spline_25 = mean(rmse_spline_25)
# cat("Mean RMSE for na.spline method with Gap Value of 25 is ",mean_rmse_spline_25, "thats is, ",mean_rmse_spline_25*100,"%\n\n")
#
mean_ioa_spline_25 = mean(ioa_spline_25)
# cat("Mean IOA for na.spline method with Gap Value of 25 is ",mean_ioa_spline_25, "thats is, ",mean_ioa_spline_25*100,"%\n\n")
#
mean_mad_spline_25 = mean(mad_spline_25)
# cat("Mean MAD for na.approx method with Gap Value of 25 is ",mean_mad_spline_25,"\n\n")
#
mad_spline = c(mad_spline,mean_mad_spline_25)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_25)
rmse_spline = c(rmse_spline,mean_rmse_spline_25)
ioa_spline = c(ioa_spline, mean_ioa_spline_25)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
mad_spline_50 = c()
fractional_bias_spline_50 = c()
rmse_spline_50 = c()
ioa_spline_50 = c()
for (i in 1:100) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
old_values = c()
new_values = c()
#print("i loop")
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:49) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
old_values = c(old_values,series_new$glucoseValue[seed+j])
series_new$glucoseValue[seed+j] = NA
#print("j loop")
}
}
#series_new now has a gap of 50 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:49) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
new_values = c(new_values,series_new$glucoseValue[seed+j])
#print("j loop")
}
}
#calculating mean absolute difference
temp1 = mad(new_values)
mad_spline_50 = c(mad_spline_50,temp1)
#calculating fractional bias
temp2 = compute.fb(new_values,old_values)
fractional_bias_spline_50 = c(fractional_bias_spline_50, temp2)
#calculating RMSE
temp3 = compute.rmse(new_values,old_values)
rmse_spline_50 = c(rmse_spline_50,temp3)
#calculatind IOA
x = data.frame("real" = old_values, 'imputed' = new_values)
temp4 = modStats(x,mod = "imputed",obs = "real", statistic = c("IOA"))
ioa_spline_50 = c(ioa_spline_50, temp4$IOA)
}
mean_fractional_bias_spline_50 = mean(fractional_bias_spline_50)
# cat("Mean Fractional Bias for na.spline method with Gap Value of 50 is ",mean_fractional_bias_spline_50, "thats is, ",mean_fractional_bias_spline_50*100,"%\n\n")
#
mean_rmse_spline_50 = mean(rmse_spline_50)
# cat("Mean RMSE for na.spline method with Gap Value of 50 is ",mean_rmse_spline_50, "thats is, ",mean_rmse_spline_50*100,"%\n\n")
#
mean_ioa_spline_50 = mean(ioa_spline_50)
# cat("Mean IOA for na.spline method with Gap Value of 50 is ",mean_ioa_spline_50, "thats is, ",mean_ioa_spline_50*100,"%\n\n")
#
mean_mad_spline_50 = mean(mad_spline_50)
# cat("Mean MAD for na.approx method with Gap Value of 50 is ",mean_mad_spline_50,"\n\n")
#
mad_spline = c(mad_spline,mean_mad_spline_50)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_50)
rmse_spline = c(rmse_spline,mean_rmse_spline_50)
ioa_spline = c(ioa_spline, mean_ioa_spline_50)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
mad_spline_100 = c()
fractional_bias_spline_100 = c()
rmse_spline_100 = c()
ioa_spline_100 = c()
for (i in 1:100) { #runs once for each seed point, i.e., a total of 100 times where i is the seed point
series_new = series
old_values = c()
new_values = c()
#print("i loop")
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:99) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
old_values = c(old_values,series_new$glucoseValue[seed+j])
series_new$glucoseValue[seed+j] = NA
#print("j loop")
}
}
#plot(series_new$glucoseValue, type='l', ylab='Glucose Level')
#series_new now has a gap of 10 starting from the seed point, so now we spline and get the error for the iteration
series_new$glucoseValue = na.spline(series_new$glucoseValue)
for (k in 0:9) {
seed = seed_points[i+k]
for (j in 0:99) { #runs 5 times for every k loop iteration to introduce a gap of 5 starting from a seed point
new_values = c(new_values,series_new$glucoseValue[seed+j])
#print("j loop")
}
}
#calculating mean absolute difference
temp1 = mad(series_new$glucoseValue)
mad_spline_100 = c(mad_spline_100,temp1)
#calculating fractional bias
temp2 = compute.fb(series_new$glucoseValue,series$glucoseValue)
fractional_bias_spline_100 = c(fractional_bias_spline_100, temp2)
#calculating RMSE
temp3 = compute.rmse(series_new$glucoseValue,series$glucoseValue)
rmse_spline_100 = c(rmse_spline_100,temp3)
#calculatind IOA
x = data.frame("real" = series$glucoseValue, 'imputed' = series_new$glucoseValue)
temp4 = modStats(x,mod = "imputed", obs = "real", statistic = c("IOA"))
ioa_spline_100 = c(ioa_spline_100, temp4$IOA)
}
mean_fractional_bias_spline_100 = mean(fractional_bias_spline_100)
# cat("Mean Fractional Bias for na.spline method with Gap Value of 100 is ",mean_fractional_bias_spline_100, "thats is, ",mean_fractional_bias_spline_100*100,"%\n\n")
#
mean_rmse_spline_100 = mean(rmse_spline_100)
# cat("Mean RMSE for na.spline method with Gap Value of 100 is ",mean_rmse_spline_100, "thats is, ",mean_rmse_spline_100*100,"%\n\n")
#
mean_ioa_spline_100 = mean(ioa_spline_100)
# cat("Mean IOA for na.spline method with Gap Value of 100 is ",mean_ioa_spline_100, "thats is, ",mean_ioa_spline_100*100,"%\n\n")
#
mean_mad_spline_100 = mean(mad_spline_100)
# cat("Mean MAD for na.approx method with Gap Value of 100 is ",mean_mad_spline_100,"\n\n")
#
mad_spline = c(mad_spline,mean_mad_spline_100)
frac_bias_spline = c(frac_bias_spline,mean_fractional_bias_spline_100)
rmse_spline = c(rmse_spline,mean_rmse_spline_100)
ioa_spline = c(ioa_spline, mean_ioa_spline_100)
rm(temp1)
rm(temp2)
rm(temp3)
rm(temp4)
rm(x)
rm(i)
rm(j)
# mad_spline
# frac_bias_spline
# rmse_spline
# ioa_spline
l=c('5','10','20','25','50','100')
plot(NULL,NULL, xaxt='n', xlim = c(1,6), ylim = c(-2,2),xlab = 'Gap Size', ylab = 'Fractional Bias', main = 'Comparing Fractional Bias')
axis(1,at=seq(1:6),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(frac_bias_approx, col = 'red',lwd=6)
lines(frac_bias_interp, col = 'blue',lwd=4)
lines(frac_bias_spline, col = 'green',lwd=2)
cat("\n\nFractional Bias Values for na.approx are:\n",frac_bias_approx)
cat("\n\nFractional Bias Values for na.interp are:\n",frac_bias_interp)
cat("\n\nFractional Bias Values for na.spline are:\n",frac_bias_spline)
plot(NULL,NULL, xaxt='n', xlim = c(1,6), ylim = c(45,55),xlab = 'Gap Size', ylab = 'Mean Absolute Difference', main = 'Comparing Mean Absolute Difference')
axis(1,at=seq(1:6),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(mad_approx, col = 'red',lwd=4)
lines(mad_interp, col = 'blue',lwd=2)
lines(mad_spline, col = 'green',lwd=2)
cat("\n\nMean Absolute Difference Values for na.approx are:\n",mad_approx)
cat("\n\nMean Absolute Difference Values for na.interp are:\n",mad_interp)
cat("\n\nMean Absolute Difference for na.spline are:\n",mad_spline)
plot(NULL,NULL, xaxt='n', xlim = c(1,6), ylim = c(0,10),xlab = 'Gap Size', ylab = 'RMSE', main = 'Comparing RMSE')
axis(1,at=seq(1:6),labels = l)
legend("topleft", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(rmse_approx, col = 'red',lwd=4)
lines(rmse_interp, col = 'blue',lwd=2)
lines(rmse_spline, col = 'green',lwd=2)
cat("\n\nRMSE Values for na.approx are:\n",rmse_approx)
cat("\n\nRMSE Values for na.interp are:\n",rmse_interp)
cat("\n\nRMSE for na.spline are:\n",rmse_spline)
plot(NULL,NULL, xaxt='n', xlim = c(1,6), ylim = c(0,1),xlab = 'Gap Size', ylab = 'Index of Agreement', main = 'Comparing Index of Agreement')
axis(1,at=seq(1:6),labels = l)
legend("bottomright", c('na.approx', 'na.interp', 'na.spline'), col = c('red','blue','green'),lwd=2,cex=.75)
lines(ioa_approx, col = 'red',lwd=6)
lines(ioa_interp, col = 'blue',lwd=4)
lines(ioa_spline, col = 'green',lwd=2)
cat("Index of Agreement Values for na.approx are:\n",ioa_approx)
cat("\n\nIndex of Agreement Values for na.interp are:\n",ioa_interp)
cat("\n\nIndex of Agreement Values for na.spline are:\n",ioa_spline)
par(mfrow = c(2,3),cex.main=1)
boxplot(fractional_bias_approx_5,fractional_bias_interp_5,fractional_bias_spline_5,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 5",
ylim = c(min(fractional_bias_approx_5,fractional_bias_interp_5,fractional_bias_spline_5), max(fractional_bias_approx_5,fractional_bias_interp_5,fractional_bias_spline_5))
)
boxplot(fractional_bias_approx_10,fractional_bias_interp_10,fractional_bias_spline_10,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 10",
ylim = c(min(fractional_bias_approx_10,fractional_bias_interp_10,fractional_bias_spline_10), max(fractional_bias_approx_10,fractional_bias_interp_10,fractional_bias_spline_10))
)
boxplot(fractional_bias_approx_20,fractional_bias_interp_20,fractional_bias_spline_20,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 20",
ylim = c(min(fractional_bias_approx_20,fractional_bias_interp_20,fractional_bias_spline_20), max(fractional_bias_approx_20,fractional_bias_interp_20,fractional_bias_spline_20))
)
boxplot(fractional_bias_approx_25,fractional_bias_interp_25,fractional_bias_spline_25,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 25",
ylim = c(min(fractional_bias_approx_25,fractional_bias_interp_25,fractional_bias_spline_25), max(fractional_bias_approx_25,fractional_bias_interp_25,fractional_bias_spline_25))
)
boxplot(fractional_bias_approx_50,fractional_bias_interp_50,fractional_bias_spline_50,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 50",
ylim = c(min(fractional_bias_approx_50,fractional_bias_interp_50,fractional_bias_spline_50), max(fractional_bias_approx_50,fractional_bias_interp_50,fractional_bias_spline_50))
)
boxplot(fractional_bias_approx_100,fractional_bias_interp_100,fractional_bias_spline_100,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 100",
ylim = c(min(fractional_bias_approx_100,fractional_bias_interp_100,fractional_bias_spline_100), max(fractional_bias_approx_100,fractional_bias_interp_100,fractional_bias_spline_100))
)
mtext("Comparing Fractional Bias", side=3, line = -16, outer = TRUE,font=2)
par(mfrow = c(2,3),cex.main=1)
boxplot(ioa_approx_5,ioa_interp_5,ioa_spline_5,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 5",
ylim = c(min(ioa_approx_5,ioa_interp_5,ioa_spline_5), max(ioa_approx_5,ioa_interp_5,ioa_spline_5))
)
boxplot(ioa_approx_10,ioa_interp_10,ioa_spline_10,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 10",
ylim = c(min(ioa_approx_10,ioa_interp_10,ioa_spline_10), max(ioa_approx_10,ioa_interp_10,ioa_spline_10))
)
boxplot(ioa_approx_20,ioa_interp_20,ioa_spline_20,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 20",
ylim = c(min(ioa_approx_20,ioa_interp_20,ioa_spline_20), max(ioa_approx_20,ioa_interp_20,ioa_spline_20))
)
boxplot(ioa_approx_25,ioa_interp_25,ioa_spline_25,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 25",
ylim = c(min(ioa_approx_25,ioa_interp_25,ioa_spline_25), max(ioa_approx_25,ioa_interp_25,ioa_spline_25))
)
boxplot(ioa_approx_50,ioa_interp_50,ioa_spline_50,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 50",
ylim = c(min(ioa_approx_50,ioa_interp_50,ioa_spline_50), max(ioa_approx_50,ioa_interp_50,ioa_spline_50))
)
boxplot(ioa_approx_100,ioa_interp_100,ioa_spline_100,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 100",
ylim = c(min(ioa_approx_100,ioa_interp_100,ioa_spline_100), max(ioa_approx_100,ioa_interp_100,ioa_spline_100))
)
mtext("Comparing Index of Agreement", side=3, line = -16, outer = TRUE,font=2)
par(mfrow = c(2,3),cex.main=1)
boxplot(rmse_approx_5,rmse_interp_5,rmse_spline_5,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 5",
ylim = c(min(rmse_approx_5,rmse_interp_5,rmse_spline_5),max(rmse_approx_5,rmse_interp_5,rmse_spline_5))
)
boxplot(rmse_approx_10,rmse_interp_10,rmse_spline_10,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 10",
ylim = c(min(rmse_approx_10,rmse_interp_10,rmse_spline_10), max(rmse_approx_10,rmse_interp_10,rmse_spline_10))
)
boxplot(rmse_approx_20,rmse_interp_20,rmse_spline_20,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 20",
ylim = c(min(rmse_approx_20,rmse_interp_20,rmse_spline_20), max(rmse_approx_20,rmse_interp_20,rmse_spline_20))
)
boxplot(rmse_approx_25,rmse_interp_25,rmse_spline_25,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 25",
ylim = c(min(rmse_approx_25,rmse_interp_25,rmse_spline_25), max(rmse_approx_25,rmse_interp_25,rmse_spline_25))
)
boxplot(rmse_approx_50,rmse_interp_50,rmse_spline_50,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 50",
ylim = c(min(rmse_approx_50,rmse_interp_50,rmse_spline_50), max(rmse_approx_50,rmse_interp_50,rmse_spline_50))
)
boxplot(rmse_approx_100,rmse_interp_100,rmse_spline_100,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 100",
ylim = c(min(rmse_approx_100,rmse_interp_100,rmse_spline_100), max(rmse_approx_100,rmse_interp_100,rmse_spline_100))
)
mtext("Comparing RMSE", side=3, line = -16, outer = TRUE,font=2)
par(mfrow = c(2,3),cex.main=1)
boxplot(mad_approx_5,mad_interp_5,mad_spline_5,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 5",
ylim = c(min(mad_approx_5,mad_interp_5,mad_spline_5), max(mad_approx_5,mad_interp_5,mad_spline_5))
)
boxplot(mad_approx_10,mad_interp_10,mad_spline_10,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 10",
ylim = c(min(mad_approx_10,mad_interp_10,mad_spline_10), max(mad_approx_10,mad_interp_10,mad_spline_10))
)
boxplot(mad_approx_20,mad_interp_20,mad_spline_20,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 20",
ylim = c(min(mad_approx_20,mad_interp_20,mad_spline_20), max(mad_approx_20,mad_interp_20,mad_spline_20))
)
boxplot(mad_approx_25,mad_interp_25,mad_spline_25,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 25",
ylim = c(min(mad_approx_25,mad_interp_25,mad_spline_25), max(mad_approx_25,mad_interp_25,mad_spline_25))
)
boxplot(mad_approx_50,mad_interp_50,mad_spline_50,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 50",
ylim = c(min(mad_approx_50,mad_interp_50,mad_spline_50), max(mad_approx_50,mad_interp_50,mad_spline_50))
)
boxplot(mad_approx_100,mad_interp_100,mad_spline_100,
names = c("approx","interp","spline"),
col = c("red","blue","green"),
main = "Gap Size = 100",
ylim = c(min(mad_approx_100,mad_interp_100,mad_spline_100), max(mad_approx_100,mad_interp_100,mad_spline_100))
)
mtext("Comparing Mean Absolute Difference", side=3, line = -16, outer = TRUE,font=2)
